import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as o,o as p}from"./app-BnU14u_s.js";const i={};function c(n,e){return p(),t("div",null,e[0]||(e[0]=[o('<p>通常，我们会使用VS2022自带的WinUI 3单项目打包应用模板来创建项目。这个空白项目由一个塞了些对MSIX包必要的图像资源，还有几个文件——<code>App.xaml</code>、<code>MainWindow.xaml</code>、<code>app.manifest</code>、<code>Package.appxmanifest</code>。</p><p>它们总是没啥逻辑地堆在项目根目录下，根目录下文件夹多了之后看着让我很烦躁，因此我便琢磨着怎样才能给它们几个文件挪个窝。</p><h1 id="_1-mainwindow-xaml" tabindex="-1"><a class="header-anchor" href="#_1-mainwindow-xaml"><span>1. <code>MainWindow.xaml</code></span></a></h1><p>这个很好处理，它并非什么关键文件，删掉便是。我们可以直接在<code>App</code>类的<code>OnLaunch()</code>方法下<code>new</code>一个<code>Window</code>出来，然后设置这个<code>Window</code>的<code>Content</code>、<code>SystemBackdrop</code>等，完全没必要单独搞个XAML文件。</p><h1 id="_2-app-manifest-package-appxmanifest" tabindex="-1"><a class="header-anchor" href="#_2-app-manifest-package-appxmanifest"><span>2. <code>app.manifest</code> &amp; <code>Package.appxmanifest</code></span></a></h1><p><code>app.manifest</code>是应用程序清单，包含了一些应用程序的能力的声明，比如<code>DpiAwareness</code>和支持的系统版本。要给它挪位置只需要在项目文件中，将已经存在的<code>&lt;ApplicationManifest&gt;</code>的值更改为移动后<code>app.manifest</code>的路径</p><p><code>Package.appxmanifest</code>则是MSIX包的清单，它包含了应用的权限，安装包的图标等等，对于打包应用而言也是必不可少的。不过对于非打包应用而言，它并不是必须的。要移动它，需要在项目文件的：</p><ul><li><code>ItemsGroup</code>中新增一条<code>&lt;AppxManifest Include=&quot;[Package.appxmanifest的路径]&quot; /&gt;</code>。</li><li><code>PropertyGroup</code>中手动指定<code>&lt;WindowsPackageType&gt;MSIX&lt;/WindowsPackageType&gt;</code>。估计是存在Bug，会导致项目根目录下链接两个与Windows App SDK部署有关的<code>.cs</code>文件，而这两个文件本应是只在非打包模式（即<code>WindowsPackageType</code>值为<code>None</code>）时才会生成。通过设置<code>&lt;WindowsAppSdkDeploymentManagerInitialize&gt;false&lt;/WindowsAppSdkDeploymentManagerInitialize&gt;</code>可以禁用这两个文件的自动生成。</li></ul><blockquote><p><strong>注意</strong></p><p>设置<code>&lt;WindowsPackageType&gt;MSIX&lt;/WindowsPackageType&gt;</code>会导致非打包模式不可用。如果你使用非打包模式，请不要指定AppxManifest，因为并不需要它，也不要禁用WASDK初始化API自动生成的.cs文件。</p></blockquote><h1 id="_3-app-xaml" tabindex="-1"><a class="header-anchor" href="#_3-app-xaml"><span>3. <code>App.xaml</code></span></a></h1><p><code>App.xaml</code>也比较诡异。在根目录下，编译时会自动生成一个<code>App.i.g.cs</code>，其中包含应用的<code>Program</code>类和<code>Main()</code>方法，应用就是从这里启动的。但是给它挪个窝后就不会生成了😡，矫情。</p><p>这可能是因为移动后<code>App.xaml</code>的生成操作从默认的<code>应用程序定义</code>变为了<code>页</code>导致的。但是我把它改回<code>应用程序定义</code>后报错了，提示：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>XAML files &#39;Application\\App.xaml&#39; and &#39;Application\\App.xaml&#39; have the same project path &#39;Application\\App.xaml&#39;.  Each file must have a unique project path.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>找了半天资料，最终找到了报错的原因。所有的XAML文件，除了根目录下的<code>App.xaml</code>，生成操作都默认为页，导致冲突。因此，在项目文件<code>ItemGroup</code>中，先删掉它的页面生成操作就好了😋，添加<code>&lt;Page Remove=&quot;Application\\App.xaml&quot; /&gt;</code>即可</p><p>![Pasted image 20241206011622.png](./.img/Pasted image 20241206011622.png)</p>',15)]))}const m=a(i,[["render",c],["__file","move-manifests-and-app-xaml-away.html.vue"]]),l=JSON.parse(`{"path":"/winui/move-manifests-and-app-xaml-away.html","title":"如何把Manifests和App.xaml挪到其它文件夹","lang":"zh-CN","frontmatter":{"title":"如何把Manifests和App.xaml挪到其它文件夹","license":"CC BY-SA 4.0 International","date":"2024-12-06T00:00:00.000Z","category":["WinUI 3"],"tag":["C#",".NET","WinUI"],"description":"通常，我们会使用VS2022自带的WinUI 3单项目打包应用模板来创建项目。这个空白项目由一个塞了些对MSIX包必要的图像资源，还有几个文件——App.xaml、MainWindow.xaml、app.manifest、Package.appxmanifest。 它们总是没啥逻辑地堆在项目根目录下，根目录下文件夹多了之后看着让我很烦躁，因此我便琢磨着...","head":[["meta",{"property":"og:url","content":"https://blog.shirasagi.space/winui/move-manifests-and-app-xaml-away.html"}],["meta",{"property":"og:site_name","content":"Shirasagi's Blog"}],["meta",{"property":"og:title","content":"如何把Manifests和App.xaml挪到其它文件夹"}],["meta",{"property":"og:description","content":"通常，我们会使用VS2022自带的WinUI 3单项目打包应用模板来创建项目。这个空白项目由一个塞了些对MSIX包必要的图像资源，还有几个文件——App.xaml、MainWindow.xaml、app.manifest、Package.appxmanifest。 它们总是没啥逻辑地堆在项目根目录下，根目录下文件夹多了之后看着让我很烦躁，因此我便琢磨着..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-21T02:43:13.000Z"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:tag","content":".NET"}],["meta",{"property":"article:tag","content":"WinUI"}],["meta",{"property":"article:published_time","content":"2024-12-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-21T02:43:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何把Manifests和App.xaml挪到其它文件夹\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-06T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-21T02:43:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Shirasagi\\",\\"url\\":\\"https://github.com/shirasagi0012\\"}]}"]]},"headers":[],"git":{"createdTime":1745203095000,"updatedTime":1745203393000,"contributors":[{"name":"Shirasagi","username":"Shirasagi","email":"23011330+Shirasagi0012@users.noreply.github.com","commits":2,"url":"https://github.com/Shirasagi"}]},"readingTime":{"minutes":2.43,"words":728},"filePathRelative":"winui/move-manifests-and-app-xaml-away.md","localizedDate":"2024年12月6日","excerpt":"<p>通常，我们会使用VS2022自带的WinUI 3单项目打包应用模板来创建项目。这个空白项目由一个塞了些对MSIX包必要的图像资源，还有几个文件——<code>App.xaml</code>、<code>MainWindow.xaml</code>、<code>app.manifest</code>、<code>Package.appxmanifest</code>。</p>\\n<p>它们总是没啥逻辑地堆在项目根目录下，根目录下文件夹多了之后看着让我很烦躁，因此我便琢磨着怎样才能给它们几个文件挪个窝。</p>\\n<h1>1. <code>MainWindow.xaml</code></h1>\\n","autoDesc":true}`);export{m as comp,l as data};
